// Generated by CoffeeScript 1.6.2
(function() {
  describe("nameFormatter service", function() {
    var formatter;

    formatter = null;
    beforeEach(module('Collection'));
    beforeEach(inject(function(nameFormatter) {
      return formatter = nameFormatter;
    }));
    it('formats a bracketed name as dotted', function() {
      var result;

      result = formatter.dotted('foo[bar]');
      return expect(result).toEqual('foo.bar');
    });
    it('leaves a dotted name as dotted', function() {
      var result;

      result = formatter.dotted('foo.bar.baz');
      return expect(result).toEqual('foo.bar.baz');
    });
    it('formats a dotted name as bracketed', function() {
      var result;

      result = formatter.bracketed('foo.bar');
      return expect(result).toEqual('foo[bar]');
    });
    it('leaves a bracketed name as bracketed', function() {
      var result;

      result = formatter.bracketed('foo[bar][baz]');
      return expect(result).toEqual('foo[bar][baz]');
    });
    it('goes full circle', function() {
      var bracketed, dotted, original;

      original = 'foo.bar.baz';
      bracketed = formatter.bracketed(original);
      dotted = formatter.dotted(bracketed);
      return expect(dotted).toEqual(original);
    });
    return it('handles undefined', function() {
      var bracketed, bracketedSegs, dotted, dottedSegs, original;

      original = void 0;
      dotted = formatter.dotted(original);
      dottedSegs = formatter.dottedSegments(original);
      bracketed = formatter.bracketed(original);
      bracketedSegs = formatter.bracketedSegments(original);
      expect(dotted).toEqual(original);
      expect(bracketed).toEqual(original);
      expect(dottedSegs).toEqual([]);
      return expect(bracketedSegs).toEqual([]);
    });
  });

}).call(this);
