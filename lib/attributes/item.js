// Generated by CoffeeScript 1.6.2
(function() {
  angular.module('Collection').provider('Item', function() {
    return {
      $get: function(Link, Template) {
        var Item;

        return Item = (function() {
          function Item(_item, _template) {
            this._item = _item;
            this._template = _template;
            this._links = {};
            this._data = null;
          }

          Item.prototype.href = function() {
            return this._item.href;
          };

          Item.prototype.datum = function(key) {
            var datum;

            datum = _.find(this._item.data, function(item) {
              return item.name === key;
            });
            return _.clone(datum);
          };

          Item.prototype.get = function(key) {
            var _ref;

            return (_ref = this.datum(key)) != null ? _ref.value : void 0;
          };

          Item.prototype.promptFor = function(key) {
            var _ref;

            return (_ref = this.datum(key)) != null ? _ref.prompt : void 0;
          };

          Item.prototype.load = function(done) {
            var options;

            options = {};
            return http.get(this._item.href, options, function(error, collection) {
              if (error) {
                return done(error);
              }
              return client.parse(collection, done);
            });
          };

          Item.prototype.links = function() {
            return this._item.links;
          };

          Item.prototype.link = function(rel) {
            var link;

            link = _.find(this._item.links || [], function(link) {
              return link.rel === rel;
            });
            if (!link) {
              return null;
            }
            if (link) {
              this._links[rel] = new Link(link);
            }
            return this._links[rel];
          };

          Item.prototype.edit = function() {
            var template;

            if (!this._template) {
              throw new Error("Item does not support editing");
            }
            template = _.clone(this._template);
            template.href = this._item.href;
            return new Template(template, this.data());
          };

          Item.prototype.remove = function(done) {
            var options;

            options = {};
            return http.del(this._item.href, options, function(error, collection) {
              if (error) {
                return done(error);
              }
              return client.parse(collection, done);
            });
          };

          return Item;

        })();
      }
    };
  });

}).call(this);
