// Generated by CoffeeScript 1.6.2
(function() {
  angular.module('Collection').provider('Template', function() {
    return {
      $get: function() {
        var Template;

        return Template = (function() {
          function Template(href, _template, form) {
            var _form;

            this.href = href;
            this._template = _template;
            this.form = form != null ? form : {};
            _template = this._template;
            _form = this.form;
            _.each((_template != null ? _template.data : void 0) || [], function(datum) {
              if (_form[datum.name] == null) {
                return _form[datum.name] = datum.value;
              }
            });
          }

          Template.prototype.datum = function(key) {
            var datum, _ref;

            datum = _.find(((_ref = this._template) != null ? _ref.data : void 0) || [], function(datum) {
              return datum.name === key;
            });
            return _.clone(datum);
          };

          Template.prototype.get = function(key) {
            return this.form[key];
          };

          Template.prototype.set = function(key, value) {
            return this.form[key] = value;
          };

          Template.prototype.promptFor = function(key) {
            var _ref;

            return (_ref = this.datum(key)) != null ? _ref.prompt : void 0;
          };

          Template.prototype.submit = function(done) {
            var form, options;

            if (done == null) {
              done = function() {};
            }
            form = _.map(this.form, function(value, name) {
              return {
                name: name,
                value: value
              };
            });
            options = {
              body: {
                template: {
                  data: form
                }
              }
            };
            return http.post(this.href, options, function(error, collection) {
              if (error) {
                return done(error);
              }
              return client.parse(collection, done);
            });
          };

          return Template;

        })();
      }
    };
  });

}).call(this);
