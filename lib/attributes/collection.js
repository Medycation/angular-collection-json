// Generated by CoffeeScript 1.6.2
(function() {
  angular.module('Collection').provider('Collection', function() {
    return {
      $get: function(Link, Item, Query, Template) {
        var Collection;

        return Collection = (function() {
          function Collection(collection) {
            var _ref;

            if ((collection != null ? (_ref = collection.collection) != null ? _ref.version : void 0 : void 0) !== "1.0") {
              throw new Error("Collection does not conform to Collection+JSON 1.0 Spec");
            }
            this._collection = collection.collection;
            this._links = null;
            this._queries = null;
            this._items = null;
            this._template = null;
            this.error = this._collection.error;
          }

          Collection.prototype.href = function() {
            return this._collection.href;
          };

          Collection.prototype.version = function() {
            return this._collection.version;
          };

          Collection.prototype.links = function() {
            var links;

            if (this._links) {
              return this._links;
            }
            this._links = links = [];
            _.each(this._collection.links, function(link) {
              return links.push(new Link(link));
            });
            return this._links;
          };

          Collection.prototype.link = function(rel) {
            var x;

            return x = _.find(this.links(), function(link) {
              return link.rel() === rel;
            });
          };

          Collection.prototype.items = function() {
            var items;

            if (this._items) {
              return this._items;
            }
            this._items = items = [];
            _.each(this._collection.items, function(item) {
              return items.push(new Item(item));
            });
            return this._items;
          };

          Collection.prototype.item = function(href) {
            return _.find(this.items, function(item) {
              return item.href === href;
            });
          };

          Collection.prototype.queries = function() {
            var queries;

            queries = [];
            _.each(this._collection.queries || [], function(query) {
              return queries.push(new Query(query));
            });
            return queries;
          };

          Collection.prototype.query = function(rel) {
            var query;

            query = _.find(this._collection.queries || [], function(query) {
              return query.rel === rel;
            });
            if (!query) {
              return null;
            }
            return new Query(query);
          };

          Collection.prototype.template = function(name) {
            return new Template(this._collection.href, this._collection.template);
          };

          return Collection;

        })();
      }
    };
  });

}).call(this);
